/*
 * This file is generated by jOOQ.
 */
package model.tables.records;


import java.time.LocalDateTime;

import model.tables.MessageJ;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MessageRecord extends UpdatableRecordImpl<MessageRecord> implements Record5<Integer, String, LocalDateTime, Integer, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>chat.message.id</code>.
     */
    public MessageRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>chat.message.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>chat.message.content</code>.
     */
    public MessageRecord setContent(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>chat.message.content</code>.
     */
    public String getContent() {
        return (String) get(1);
    }

    /**
     * Setter for <code>chat.message.date</code>.
     */
    public MessageRecord setDate(LocalDateTime value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>chat.message.date</code>.
     */
    public LocalDateTime getDate() {
        return (LocalDateTime) get(2);
    }

    /**
     * Setter for <code>chat.message.sender</code>.
     */
    public MessageRecord setSender(Integer value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>chat.message.sender</code>.
     */
    public Integer getSender() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>chat.message.receiver</code>.
     */
    public MessageRecord setReceiver(Integer value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>chat.message.receiver</code>.
     */
    public Integer getReceiver() {
        return (Integer) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Integer, String, LocalDateTime, Integer, Integer> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Integer, String, LocalDateTime, Integer, Integer> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return MessageJ.MESSAGE.ID;
    }

    @Override
    public Field<String> field2() {
        return MessageJ.MESSAGE.CONTENT;
    }

    @Override
    public Field<LocalDateTime> field3() {
        return MessageJ.MESSAGE.DATE;
    }

    @Override
    public Field<Integer> field4() {
        return MessageJ.MESSAGE.SENDER;
    }

    @Override
    public Field<Integer> field5() {
        return MessageJ.MESSAGE.RECEIVER;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getContent();
    }

    @Override
    public LocalDateTime component3() {
        return getDate();
    }

    @Override
    public Integer component4() {
        return getSender();
    }

    @Override
    public Integer component5() {
        return getReceiver();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getContent();
    }

    @Override
    public LocalDateTime value3() {
        return getDate();
    }

    @Override
    public Integer value4() {
        return getSender();
    }

    @Override
    public Integer value5() {
        return getReceiver();
    }

    @Override
    public MessageRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public MessageRecord value2(String value) {
        setContent(value);
        return this;
    }

    @Override
    public MessageRecord value3(LocalDateTime value) {
        setDate(value);
        return this;
    }

    @Override
    public MessageRecord value4(Integer value) {
        setSender(value);
        return this;
    }

    @Override
    public MessageRecord value5(Integer value) {
        setReceiver(value);
        return this;
    }

    @Override
    public MessageRecord values(Integer value1, String value2, LocalDateTime value3, Integer value4, Integer value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached MessageRecord
     */
    public MessageRecord() {
        super(MessageJ.MESSAGE);
    }

    /**
     * Create a detached, initialised MessageRecord
     */
    public MessageRecord(Integer id, String content, LocalDateTime date, Integer sender, Integer receiver) {
        super(MessageJ.MESSAGE);

        setId(id);
        setContent(content);
        setDate(date);
        setSender(sender);
        setReceiver(receiver);
        resetChangedOnNotNull();
    }
}
